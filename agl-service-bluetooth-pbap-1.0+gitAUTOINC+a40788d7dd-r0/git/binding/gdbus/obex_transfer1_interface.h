/*
 * Generated by gdbus-codegen 2.50.3. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __OBEX_TRANSFER1_INTERFACE_H__
#define __OBEX_TRANSFER1_INTERFACE_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.bluez.obex.Transfer1 */

#define TYPE_ORG_BLUEZ_OBEX_TRANSFER1 (org_bluez_obex_transfer1_get_type ())
#define ORG_BLUEZ_OBEX_TRANSFER1(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_BLUEZ_OBEX_TRANSFER1, OrgBluezObexTransfer1))
#define IS_ORG_BLUEZ_OBEX_TRANSFER1(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_BLUEZ_OBEX_TRANSFER1))
#define ORG_BLUEZ_OBEX_TRANSFER1_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_ORG_BLUEZ_OBEX_TRANSFER1, OrgBluezObexTransfer1Iface))

struct _OrgBluezObexTransfer1;
typedef struct _OrgBluezObexTransfer1 OrgBluezObexTransfer1;
typedef struct _OrgBluezObexTransfer1Iface OrgBluezObexTransfer1Iface;

struct _OrgBluezObexTransfer1Iface
{
  GTypeInterface parent_iface;

  gboolean (*handle_cancel) (
    OrgBluezObexTransfer1 *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_resume) (
    OrgBluezObexTransfer1 *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_suspend) (
    OrgBluezObexTransfer1 *object,
    GDBusMethodInvocation *invocation);

};

GType org_bluez_obex_transfer1_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *org_bluez_obex_transfer1_interface_info (void);
guint org_bluez_obex_transfer1_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void org_bluez_obex_transfer1_complete_cancel (
    OrgBluezObexTransfer1 *object,
    GDBusMethodInvocation *invocation);

void org_bluez_obex_transfer1_complete_suspend (
    OrgBluezObexTransfer1 *object,
    GDBusMethodInvocation *invocation);

void org_bluez_obex_transfer1_complete_resume (
    OrgBluezObexTransfer1 *object,
    GDBusMethodInvocation *invocation);



/* D-Bus method calls: */
void org_bluez_obex_transfer1_call_cancel (
    OrgBluezObexTransfer1 *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_bluez_obex_transfer1_call_cancel_finish (
    OrgBluezObexTransfer1 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_bluez_obex_transfer1_call_cancel_sync (
    OrgBluezObexTransfer1 *proxy,
    GCancellable *cancellable,
    GError **error);

void org_bluez_obex_transfer1_call_suspend (
    OrgBluezObexTransfer1 *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_bluez_obex_transfer1_call_suspend_finish (
    OrgBluezObexTransfer1 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_bluez_obex_transfer1_call_suspend_sync (
    OrgBluezObexTransfer1 *proxy,
    GCancellable *cancellable,
    GError **error);

void org_bluez_obex_transfer1_call_resume (
    OrgBluezObexTransfer1 *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_bluez_obex_transfer1_call_resume_finish (
    OrgBluezObexTransfer1 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_bluez_obex_transfer1_call_resume_sync (
    OrgBluezObexTransfer1 *proxy,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TYPE_ORG_BLUEZ_OBEX_TRANSFER1_PROXY (org_bluez_obex_transfer1_proxy_get_type ())
#define ORG_BLUEZ_OBEX_TRANSFER1_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_BLUEZ_OBEX_TRANSFER1_PROXY, OrgBluezObexTransfer1Proxy))
#define ORG_BLUEZ_OBEX_TRANSFER1_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_ORG_BLUEZ_OBEX_TRANSFER1_PROXY, OrgBluezObexTransfer1ProxyClass))
#define ORG_BLUEZ_OBEX_TRANSFER1_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_ORG_BLUEZ_OBEX_TRANSFER1_PROXY, OrgBluezObexTransfer1ProxyClass))
#define IS_ORG_BLUEZ_OBEX_TRANSFER1_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_BLUEZ_OBEX_TRANSFER1_PROXY))
#define IS_ORG_BLUEZ_OBEX_TRANSFER1_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_ORG_BLUEZ_OBEX_TRANSFER1_PROXY))

typedef struct _OrgBluezObexTransfer1Proxy OrgBluezObexTransfer1Proxy;
typedef struct _OrgBluezObexTransfer1ProxyClass OrgBluezObexTransfer1ProxyClass;
typedef struct _OrgBluezObexTransfer1ProxyPrivate OrgBluezObexTransfer1ProxyPrivate;

struct _OrgBluezObexTransfer1Proxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  OrgBluezObexTransfer1ProxyPrivate *priv;
};

struct _OrgBluezObexTransfer1ProxyClass
{
  GDBusProxyClass parent_class;
};

GType org_bluez_obex_transfer1_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (OrgBluezObexTransfer1Proxy, g_object_unref)
#endif

void org_bluez_obex_transfer1_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
OrgBluezObexTransfer1 *org_bluez_obex_transfer1_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
OrgBluezObexTransfer1 *org_bluez_obex_transfer1_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void org_bluez_obex_transfer1_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
OrgBluezObexTransfer1 *org_bluez_obex_transfer1_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
OrgBluezObexTransfer1 *org_bluez_obex_transfer1_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_ORG_BLUEZ_OBEX_TRANSFER1_SKELETON (org_bluez_obex_transfer1_skeleton_get_type ())
#define ORG_BLUEZ_OBEX_TRANSFER1_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_BLUEZ_OBEX_TRANSFER1_SKELETON, OrgBluezObexTransfer1Skeleton))
#define ORG_BLUEZ_OBEX_TRANSFER1_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_ORG_BLUEZ_OBEX_TRANSFER1_SKELETON, OrgBluezObexTransfer1SkeletonClass))
#define ORG_BLUEZ_OBEX_TRANSFER1_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_ORG_BLUEZ_OBEX_TRANSFER1_SKELETON, OrgBluezObexTransfer1SkeletonClass))
#define IS_ORG_BLUEZ_OBEX_TRANSFER1_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_BLUEZ_OBEX_TRANSFER1_SKELETON))
#define IS_ORG_BLUEZ_OBEX_TRANSFER1_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_ORG_BLUEZ_OBEX_TRANSFER1_SKELETON))

typedef struct _OrgBluezObexTransfer1Skeleton OrgBluezObexTransfer1Skeleton;
typedef struct _OrgBluezObexTransfer1SkeletonClass OrgBluezObexTransfer1SkeletonClass;
typedef struct _OrgBluezObexTransfer1SkeletonPrivate OrgBluezObexTransfer1SkeletonPrivate;

struct _OrgBluezObexTransfer1Skeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  OrgBluezObexTransfer1SkeletonPrivate *priv;
};

struct _OrgBluezObexTransfer1SkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType org_bluez_obex_transfer1_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (OrgBluezObexTransfer1Skeleton, g_object_unref)
#endif

OrgBluezObexTransfer1 *org_bluez_obex_transfer1_skeleton_new (void);


G_END_DECLS

#endif /* __OBEX_TRANSFER1_INTERFACE_H__ */
