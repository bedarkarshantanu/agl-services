/*
 * Generated by gdbus-codegen 2.50.3. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __OBEX_PHONEBOOKACCESS1_INTERFACE_H__
#define __OBEX_PHONEBOOKACCESS1_INTERFACE_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.bluez.obex.PhonebookAccess1 */

#define TYPE_ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1 (org_bluez_obex_phonebook_access1_get_type ())
#define ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1, OrgBluezObexPhonebookAccess1))
#define IS_ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1))
#define ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1, OrgBluezObexPhonebookAccess1Iface))

struct _OrgBluezObexPhonebookAccess1;
typedef struct _OrgBluezObexPhonebookAccess1 OrgBluezObexPhonebookAccess1;
typedef struct _OrgBluezObexPhonebookAccess1Iface OrgBluezObexPhonebookAccess1Iface;

struct _OrgBluezObexPhonebookAccess1Iface
{
  GTypeInterface parent_iface;


  gboolean (*handle_get_size) (
    OrgBluezObexPhonebookAccess1 *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_list) (
    OrgBluezObexPhonebookAccess1 *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_filters);

  gboolean (*handle_list_filter_fields) (
    OrgBluezObexPhonebookAccess1 *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_pull) (
    OrgBluezObexPhonebookAccess1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_vcard,
    const gchar *arg_targetfile,
    GVariant *arg_filters);

  gboolean (*handle_pull_all) (
    OrgBluezObexPhonebookAccess1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_targetfile,
    GVariant *arg_filters);

  gboolean (*handle_search) (
    OrgBluezObexPhonebookAccess1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_field,
    const gchar *arg_value,
    GVariant *arg_filters);

  gboolean (*handle_select) (
    OrgBluezObexPhonebookAccess1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_location,
    const gchar *arg_phonebook);

  gboolean (*handle_update_version) (
    OrgBluezObexPhonebookAccess1 *object,
    GDBusMethodInvocation *invocation);

  const gchar * (*get_database_identifier) (OrgBluezObexPhonebookAccess1 *object);

  gboolean  (*get_fixed_image_size) (OrgBluezObexPhonebookAccess1 *object);

  const gchar * (*get_folder) (OrgBluezObexPhonebookAccess1 *object);

  const gchar * (*get_primary_counter) (OrgBluezObexPhonebookAccess1 *object);

  const gchar * (*get_secondary_counter) (OrgBluezObexPhonebookAccess1 *object);

};

GType org_bluez_obex_phonebook_access1_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *org_bluez_obex_phonebook_access1_interface_info (void);
guint org_bluez_obex_phonebook_access1_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void org_bluez_obex_phonebook_access1_complete_select (
    OrgBluezObexPhonebookAccess1 *object,
    GDBusMethodInvocation *invocation);

void org_bluez_obex_phonebook_access1_complete_pull_all (
    OrgBluezObexPhonebookAccess1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *transfer,
    GVariant *properties);

void org_bluez_obex_phonebook_access1_complete_pull (
    OrgBluezObexPhonebookAccess1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *transfer,
    GVariant *properties);

void org_bluez_obex_phonebook_access1_complete_list (
    OrgBluezObexPhonebookAccess1 *object,
    GDBusMethodInvocation *invocation,
    GVariant *vcard_listing);

void org_bluez_obex_phonebook_access1_complete_search (
    OrgBluezObexPhonebookAccess1 *object,
    GDBusMethodInvocation *invocation,
    GVariant *vcard_listing);

void org_bluez_obex_phonebook_access1_complete_get_size (
    OrgBluezObexPhonebookAccess1 *object,
    GDBusMethodInvocation *invocation,
    guint16 size);

void org_bluez_obex_phonebook_access1_complete_list_filter_fields (
    OrgBluezObexPhonebookAccess1 *object,
    GDBusMethodInvocation *invocation,
    const gchar *const *fields);

void org_bluez_obex_phonebook_access1_complete_update_version (
    OrgBluezObexPhonebookAccess1 *object,
    GDBusMethodInvocation *invocation);



/* D-Bus method calls: */
void org_bluez_obex_phonebook_access1_call_select (
    OrgBluezObexPhonebookAccess1 *proxy,
    const gchar *arg_location,
    const gchar *arg_phonebook,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_bluez_obex_phonebook_access1_call_select_finish (
    OrgBluezObexPhonebookAccess1 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_bluez_obex_phonebook_access1_call_select_sync (
    OrgBluezObexPhonebookAccess1 *proxy,
    const gchar *arg_location,
    const gchar *arg_phonebook,
    GCancellable *cancellable,
    GError **error);

void org_bluez_obex_phonebook_access1_call_pull_all (
    OrgBluezObexPhonebookAccess1 *proxy,
    const gchar *arg_targetfile,
    GVariant *arg_filters,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_bluez_obex_phonebook_access1_call_pull_all_finish (
    OrgBluezObexPhonebookAccess1 *proxy,
    gchar **out_transfer,
    GVariant **out_properties,
    GAsyncResult *res,
    GError **error);

gboolean org_bluez_obex_phonebook_access1_call_pull_all_sync (
    OrgBluezObexPhonebookAccess1 *proxy,
    const gchar *arg_targetfile,
    GVariant *arg_filters,
    gchar **out_transfer,
    GVariant **out_properties,
    GCancellable *cancellable,
    GError **error);

void org_bluez_obex_phonebook_access1_call_pull (
    OrgBluezObexPhonebookAccess1 *proxy,
    const gchar *arg_vcard,
    const gchar *arg_targetfile,
    GVariant *arg_filters,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_bluez_obex_phonebook_access1_call_pull_finish (
    OrgBluezObexPhonebookAccess1 *proxy,
    gchar **out_transfer,
    GVariant **out_properties,
    GAsyncResult *res,
    GError **error);

gboolean org_bluez_obex_phonebook_access1_call_pull_sync (
    OrgBluezObexPhonebookAccess1 *proxy,
    const gchar *arg_vcard,
    const gchar *arg_targetfile,
    GVariant *arg_filters,
    gchar **out_transfer,
    GVariant **out_properties,
    GCancellable *cancellable,
    GError **error);

void org_bluez_obex_phonebook_access1_call_list (
    OrgBluezObexPhonebookAccess1 *proxy,
    GVariant *arg_filters,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_bluez_obex_phonebook_access1_call_list_finish (
    OrgBluezObexPhonebookAccess1 *proxy,
    GVariant **out_vcard_listing,
    GAsyncResult *res,
    GError **error);

gboolean org_bluez_obex_phonebook_access1_call_list_sync (
    OrgBluezObexPhonebookAccess1 *proxy,
    GVariant *arg_filters,
    GVariant **out_vcard_listing,
    GCancellable *cancellable,
    GError **error);

void org_bluez_obex_phonebook_access1_call_search (
    OrgBluezObexPhonebookAccess1 *proxy,
    const gchar *arg_field,
    const gchar *arg_value,
    GVariant *arg_filters,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_bluez_obex_phonebook_access1_call_search_finish (
    OrgBluezObexPhonebookAccess1 *proxy,
    GVariant **out_vcard_listing,
    GAsyncResult *res,
    GError **error);

gboolean org_bluez_obex_phonebook_access1_call_search_sync (
    OrgBluezObexPhonebookAccess1 *proxy,
    const gchar *arg_field,
    const gchar *arg_value,
    GVariant *arg_filters,
    GVariant **out_vcard_listing,
    GCancellable *cancellable,
    GError **error);

void org_bluez_obex_phonebook_access1_call_get_size (
    OrgBluezObexPhonebookAccess1 *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_bluez_obex_phonebook_access1_call_get_size_finish (
    OrgBluezObexPhonebookAccess1 *proxy,
    guint16 *out_size,
    GAsyncResult *res,
    GError **error);

gboolean org_bluez_obex_phonebook_access1_call_get_size_sync (
    OrgBluezObexPhonebookAccess1 *proxy,
    guint16 *out_size,
    GCancellable *cancellable,
    GError **error);

void org_bluez_obex_phonebook_access1_call_list_filter_fields (
    OrgBluezObexPhonebookAccess1 *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_bluez_obex_phonebook_access1_call_list_filter_fields_finish (
    OrgBluezObexPhonebookAccess1 *proxy,
    gchar ***out_fields,
    GAsyncResult *res,
    GError **error);

gboolean org_bluez_obex_phonebook_access1_call_list_filter_fields_sync (
    OrgBluezObexPhonebookAccess1 *proxy,
    gchar ***out_fields,
    GCancellable *cancellable,
    GError **error);

void org_bluez_obex_phonebook_access1_call_update_version (
    OrgBluezObexPhonebookAccess1 *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_bluez_obex_phonebook_access1_call_update_version_finish (
    OrgBluezObexPhonebookAccess1 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_bluez_obex_phonebook_access1_call_update_version_sync (
    OrgBluezObexPhonebookAccess1 *proxy,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
const gchar *org_bluez_obex_phonebook_access1_get_folder (OrgBluezObexPhonebookAccess1 *object);
gchar *org_bluez_obex_phonebook_access1_dup_folder (OrgBluezObexPhonebookAccess1 *object);
void org_bluez_obex_phonebook_access1_set_folder (OrgBluezObexPhonebookAccess1 *object, const gchar *value);

const gchar *org_bluez_obex_phonebook_access1_get_database_identifier (OrgBluezObexPhonebookAccess1 *object);
gchar *org_bluez_obex_phonebook_access1_dup_database_identifier (OrgBluezObexPhonebookAccess1 *object);
void org_bluez_obex_phonebook_access1_set_database_identifier (OrgBluezObexPhonebookAccess1 *object, const gchar *value);

const gchar *org_bluez_obex_phonebook_access1_get_primary_counter (OrgBluezObexPhonebookAccess1 *object);
gchar *org_bluez_obex_phonebook_access1_dup_primary_counter (OrgBluezObexPhonebookAccess1 *object);
void org_bluez_obex_phonebook_access1_set_primary_counter (OrgBluezObexPhonebookAccess1 *object, const gchar *value);

const gchar *org_bluez_obex_phonebook_access1_get_secondary_counter (OrgBluezObexPhonebookAccess1 *object);
gchar *org_bluez_obex_phonebook_access1_dup_secondary_counter (OrgBluezObexPhonebookAccess1 *object);
void org_bluez_obex_phonebook_access1_set_secondary_counter (OrgBluezObexPhonebookAccess1 *object, const gchar *value);

gboolean org_bluez_obex_phonebook_access1_get_fixed_image_size (OrgBluezObexPhonebookAccess1 *object);
void org_bluez_obex_phonebook_access1_set_fixed_image_size (OrgBluezObexPhonebookAccess1 *object, gboolean value);


/* ---- */

#define TYPE_ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1_PROXY (org_bluez_obex_phonebook_access1_proxy_get_type ())
#define ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1_PROXY, OrgBluezObexPhonebookAccess1Proxy))
#define ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1_PROXY, OrgBluezObexPhonebookAccess1ProxyClass))
#define ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1_PROXY, OrgBluezObexPhonebookAccess1ProxyClass))
#define IS_ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1_PROXY))
#define IS_ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1_PROXY))

typedef struct _OrgBluezObexPhonebookAccess1Proxy OrgBluezObexPhonebookAccess1Proxy;
typedef struct _OrgBluezObexPhonebookAccess1ProxyClass OrgBluezObexPhonebookAccess1ProxyClass;
typedef struct _OrgBluezObexPhonebookAccess1ProxyPrivate OrgBluezObexPhonebookAccess1ProxyPrivate;

struct _OrgBluezObexPhonebookAccess1Proxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  OrgBluezObexPhonebookAccess1ProxyPrivate *priv;
};

struct _OrgBluezObexPhonebookAccess1ProxyClass
{
  GDBusProxyClass parent_class;
};

GType org_bluez_obex_phonebook_access1_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (OrgBluezObexPhonebookAccess1Proxy, g_object_unref)
#endif

void org_bluez_obex_phonebook_access1_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
OrgBluezObexPhonebookAccess1 *org_bluez_obex_phonebook_access1_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
OrgBluezObexPhonebookAccess1 *org_bluez_obex_phonebook_access1_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void org_bluez_obex_phonebook_access1_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
OrgBluezObexPhonebookAccess1 *org_bluez_obex_phonebook_access1_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
OrgBluezObexPhonebookAccess1 *org_bluez_obex_phonebook_access1_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1_SKELETON (org_bluez_obex_phonebook_access1_skeleton_get_type ())
#define ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1_SKELETON, OrgBluezObexPhonebookAccess1Skeleton))
#define ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1_SKELETON, OrgBluezObexPhonebookAccess1SkeletonClass))
#define ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1_SKELETON, OrgBluezObexPhonebookAccess1SkeletonClass))
#define IS_ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1_SKELETON))
#define IS_ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_ORG_BLUEZ_OBEX_PHONEBOOK_ACCESS1_SKELETON))

typedef struct _OrgBluezObexPhonebookAccess1Skeleton OrgBluezObexPhonebookAccess1Skeleton;
typedef struct _OrgBluezObexPhonebookAccess1SkeletonClass OrgBluezObexPhonebookAccess1SkeletonClass;
typedef struct _OrgBluezObexPhonebookAccess1SkeletonPrivate OrgBluezObexPhonebookAccess1SkeletonPrivate;

struct _OrgBluezObexPhonebookAccess1Skeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  OrgBluezObexPhonebookAccess1SkeletonPrivate *priv;
};

struct _OrgBluezObexPhonebookAccess1SkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType org_bluez_obex_phonebook_access1_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (OrgBluezObexPhonebookAccess1Skeleton, g_object_unref)
#endif

OrgBluezObexPhonebookAccess1 *org_bluez_obex_phonebook_access1_skeleton_new (void);


G_END_DECLS

#endif /* __OBEX_PHONEBOOKACCESS1_INTERFACE_H__ */
